{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","head","titles","children","tbody","fieldsNames","selectionItems","form","createForm","cellInput","createElement","countActiveCells","querySelectorAll","length","oldCellValue","getColumn","index","rows","column","row","push","textContent","sortAscArray","array","find","el","isNaN","sort","a","b","indexOf","convertCurrencytoNumber","map","num","convertToCurrency","localeCompare","sortDescArray","changeRowOrder","sortedArr","sortedRows","forEach","cell","remove","appendChild","sortTableInDirection","direction","sortTableOnClick","element","clicksCounter","addEventListener","parentElement","className","formElement","classList","add","createInputs","fieldsArray","i","label","input","inputInfo","toLowerCase","type","name","id","required","for","createSelection","selectionName","optionsArray","selectionLabel","selectionItem","insertAdjacentElement","item","option","value","createSubmitButton","submitButton","addForm","inputNames","selectionTitle","selectionNames","slice","split","join","number","formatter","Intl","NumberFormat","style","currency","maximumFractionDigits","format","checkLength","inputValue","trim","checkName","checkAge","checkSalary","createNotification","block","title","text","color","displayNotification","notification","setTimeout","display","showSuccess","showError","showWarning","getInputError","checkingFunction","checkingValue","incorrectData","selectRow","tableRows","e","target","parentNode","activeElements","addNewRow","dataArr","table","rowLength","newRow","j","newCell","fillNewRow","userInputArr","preventDefault","inputName","reset","selectCell","cells","focus","setNewCellValue","oldValue","newCellValue","cellIndex","cellName","inputEvent","key"],"mappings":";AAAA,aA6cA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA3cA,IAAMA,EAAOC,SAASC,cAAc,QAC9BC,EAAOF,SAASC,cAAc,SAC9BE,EAAaD,EAAAA,EAAKE,SAAS,GAAGA,UAC9BC,EAAQL,SAASC,cAAc,SAE/BK,EAAc,CAAC,OAAQ,WAAY,MAAO,UAC1CC,EAAiB,CAAvB,QAAA,YAAA,SAAA,WAAA,YAAA,iBAIMC,EAAOC,EAAWV,EAAM,qBACxBW,EAAYV,SAASW,cAAc,SACrCC,EAAmBZ,SAASa,iBAAiB,cAAcC,OAC3DC,EAAe,GAEnB,SAASC,EAAUC,GACXC,IADkB,EAElBC,EAAS,GAEGD,EAAAA,EAHLb,EAAMa,MADK,IAIA,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAbE,IAAAA,EAAa,EAAA,MACtBD,EAAOE,KAAKD,EAAIhB,SAASa,GAAOK,cALV,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAQjBH,OAAAA,EAGT,SAASI,EAAaC,GAChBA,GAAAA,EAAMC,KAAK,SAAAC,GAAM,OAACC,OAAOD,KACpBF,OAAAA,EAAMI,KAAK,SAACC,EAAGC,GAAMD,OAAAA,EAAIC,IAG9BN,GAAAA,EAAMC,KAAK,SAAAC,GAAMA,OAAqB,IAArBA,EAAGK,QAAQ,OAAc,CACxCZ,IAAAA,EAASa,EAAwBR,GAI9BL,OAFPA,EAASA,EAAOS,KAAK,SAACC,EAAGC,GAAMD,OAAAA,EAAIC,KAErBG,IAAI,SAAAC,GAAOC,OAAAA,EAAkBD,KAGtCV,OAAAA,EAAMI,KAAK,SAACC,EAAGC,GAAMD,OAAAA,EAAEO,cAAcN,KAG9C,SAASO,EAAcb,GACjBA,GAAAA,EAAMC,KAAK,SAAAC,GAAM,OAACC,OAAOD,KACpBF,OAAAA,EAAMI,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAID,IAG9BL,GAAAA,EAAMC,KAAK,SAAAC,GAAMA,OAAqB,IAArBA,EAAGK,QAAQ,OAAc,CACxCZ,IAAAA,EAASa,EAAwBR,GAI9BL,OAFPA,EAASA,EAAOS,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAID,KAErBI,IAAI,SAAAC,GAAOC,OAAAA,EAAkBD,KAGtCV,OAAAA,EAAMI,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAEM,cAAcP,KAG9C,SAASS,EAAeC,GAChBC,IAAAA,EAAa,GAaZA,OAXPD,EAAUE,QAAQ,SAAAf,GACErB,IADI,EACJA,EAAAA,EAAAA,EAAMa,MADF,IACQ,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBE,IAAAA,EAAmB,EAAA,MACxB,EAAIA,EAAIhB,UAAUqB,KAAK,SAAAiB,GAAQA,OAAAA,EAAKpB,cAAgBI,KACtDc,EAAWnB,KAAKD,IAHE,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,OAQpBf,EAAAA,EAAMa,MAAMuB,QAAQ,SAAAf,GAAMA,OAAAA,EAAGiB,WACjCH,EAAWC,QAAQ,SAAAf,GAAMrB,OAAAA,EAAMuC,YAAYlB,KAEpCc,EAGT,SAASK,EAAqB5B,GAAO6B,IAAAA,EAAY,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,MACzC3B,EAASH,EAAUC,GAMzBqB,EAJoC,QAAdQ,EAClBT,EAAclB,GACdI,EAAaJ,IAKnB,SAAS4B,EAAiB9B,EAAO+B,GAC3BC,IAAAA,EAAgB,EAEpBD,EAAQE,iBAAiB,QAAS,WAE9BL,EAAqB5B,EADnBgC,EAAgB,GAAM,EACI,MAEA,QAG9BA,MAIJ,SAASxC,EAAW0C,EAAeC,GAC3BC,IAAAA,EAAcrD,SAASW,cAAc,QAKpC0C,OAHPA,EAAYC,UAAUC,IAAIH,GAC1BD,EAAcP,YAAYS,GAEnBA,EAGT,SAASG,EAAaL,EAAeM,GAC9B,IAAA,IAAIC,EAAI,EAAGA,EAAID,EAAY3C,OAAQ4C,IAAK,CACrCC,IAAAA,EAAQ3D,SAASW,cAAc,SAC/BiD,EAAQ5D,SAASW,cAAc,SAC/BkD,EAAYvD,EAAYoD,GAAGI,cAEjCH,EAAMrC,YAAiBhB,GAAAA,OAAAA,EAAYoD,GAAnC,KACAE,EAAMG,KAAO,OAEbH,EAAMG,KAAe,IAANL,GAAmB,IAANA,EACxB,SACA,OAEJE,EAAMI,KAAOH,EACbD,EAAM,WAAaC,EACnBD,EAAMK,GAAKJ,EACXD,EAAMM,UAAW,EAEjBP,EAAMQ,IAAMP,EAAMK,GAElBN,EAAMf,YAAYgB,GAClBT,EAAcP,YAAYe,IAI9B,SAASS,EAAgBjB,EAAekB,EAAeC,GAC/CC,IAAAA,EAAiBvE,SAASW,cAAc,SACxC6D,EAAgBxE,SAASW,cAAc,UAE7C6D,EAAcP,GAAKI,EAAcP,cACjCU,EAAcR,KAAOQ,EAAcP,GACnCO,EAAcN,UAAW,EAEzBK,EAAeJ,IAAMK,EAAcP,GACnCM,EAAejD,YAAiB+C,GAAAA,OAAAA,EAAhC,KAEAE,EAAe3B,YAAY4B,GAC3BrB,EAAc/C,SAAS,GAAGqE,sBAAsB,WAAYF,GAEzCD,IAdgD,EAchDA,EAAAA,EAAAA,GAdgD,IAclC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAtBI,IAAAA,EAAsB,EAAA,MACzBC,EAAS3E,SAASW,cAAc,UAEtCgE,EAAOC,MAAQF,EACfC,EAAOrD,YAAcoD,EAErBF,EAAc5B,YAAY+B,IApBuC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAuB5DH,OAAAA,EAGT,SAASK,EAAmB1B,GACpB2B,IAAAA,EAAe9E,SAASW,cAAc,UAOrCmE,OALPA,EAAaf,KAAO,SACpBe,EAAaxD,YAAc,gBAE3B6B,EAAcP,YAAYkC,GAEnBA,EAGT,SAASC,EAAQ1B,EAAa2B,EAAYC,EAAgBC,GACxD1B,EAAaH,EAAa2B,GAC1BZ,EAAgBf,EAAa4B,EAAgBC,GAC7CL,EAAmBrE,GAGrB,SAASwB,EAAwBR,GACxBA,OAAAA,EAAMS,IAAI,SAAAP,GAAM,OAACA,EAAGyD,MAAM,GAAGC,MAAM,KAAKC,KAAK,MAGtD,SAASlD,EAAkBmD,GAOlBC,OANW,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAGRC,OAAOP,GAG1B,SAASQ,EAAYC,GACfA,OAA6B,IAA7BA,EAAWC,OAAOlF,OAOxB,SAASmF,EAAUF,GAGZD,SAAAA,EAAYC,KACXD,EAAYC,IAAiBA,EAAWjF,OAHvB,GAUzB,SAASoF,EAASH,GAIXD,SAAAA,EAAYC,IACZA,EAJU,IAIeA,EAHf,IAUjB,SAASI,EAAYJ,GAGdD,SAAAA,EAAYC,IAAiBA,GAFhB,GASpB,SAASK,IACDC,IAAAA,EAAQrG,SAASW,cAAc,OAC/B2F,EAAQtG,SAASW,cAAc,MAC/B4F,EAAOvG,SAASW,cAAc,KAY7B0F,OAVPA,EAAK,GAAS,eACdA,EAAMjD,UAAY,eAElBkD,EAAMZ,MAAMc,MAAQ,QACpBD,EAAKb,MAAMc,MAAQ,QAEnBzG,EAAK6C,YAAYyD,GACjBA,EAAMzD,YAAY0D,GAClBD,EAAMzD,YAAY2D,GAEXF,EAGT,SAASI,EAAoBC,GAC3BC,WAAW,WACTD,EAAahB,MAAMkB,QAAU,QAC5B,KAGL,SAASC,IACDR,IAAAA,EAAQD,IAEdC,EAAM/C,UAAUC,IAAI,WACpB8C,EAAMjG,SAAS,GAAGkB,YAAc,sCAChC+E,EAAMjG,SAAS,GAAGkB,YAAlB,iCAEAmF,EAAoBJ,GAGtB,SAASS,IACDT,IAAAA,EAAQD,IAEdC,EAAM/C,UAAUC,IAAI,SACpB8C,EAAMjG,SAAS,GAAGkB,YAAc,+BAChC+E,EAAMjG,SAAS,GAAGkB,YAAlB,uCAEAmF,EAAoBJ,GAGtB,SAASU,IACDV,IAAAA,EAAQD,IAEdC,EAAM/C,UAAUC,IAAI,WACpB8C,EAAMjG,SAAS,GAAGkB,YAAc,8BAChC+E,EAAMjG,SAAS,GAAGkB,YAAlB,uCAEAmF,EAAoBJ,GAGtB,SAASW,EAAcC,EAAkBC,EAAeR,GAChDS,IAAAA,EAAgBF,EAAiBC,GAMhCC,OAJHA,GAAiBT,GACnBA,IAGKS,EAGT,SAASC,EAAUC,GACjBA,EAAUnE,iBAAiB,QAAS,SAAAoE,GAC5BlG,IAAAA,EAAMkG,EAAEC,OAAOC,WACfC,EAAqBzH,EAAAA,SAASa,iBAAiB,YAEhD4G,EAAe3G,OAEiB,IAA1B2G,EAAe3G,SACxBM,EAAIkC,UAAUC,IAAI,UAClBkE,EAAe,GAAGnE,UAAUX,OAAO,WAHnCvB,EAAIkC,UAAUC,IAAI,YAQxB,SAASmE,EAAUC,EAASC,EAAOC,GAC3BC,IAAAA,EAAS9H,SAASW,cAAc,MAEtCiH,EAAMhF,YAAYkF,GAEb,IAAA,IAAIC,EAAI,EAAGA,EAAIF,EAAWE,IAAK,CAC5BC,IAAAA,EAAUhI,SAASW,cAAc,MAEvCqH,EAAQ1G,YAAcqG,EAAQI,GAC9BD,EAAOlF,YAAYoF,IAIvB,SAASC,EAAW5E,EAAawE,EAAWD,GACtCM,IAAAA,EAAe,GAEnB7E,EAAYH,iBAAiB,SAAU,SAAAoE,GACrCA,EAAEa,iBAIG,IAFDhB,IAAAA,GAAgB,EAEXzD,EAAI,EAAGA,EAAIlD,EAAKJ,SAASU,OAAS,EAAG4C,IAAK,CAC3CC,IAAAA,EAAQnD,EAAKJ,SAASsD,GACxBqC,EAAapC,EAAMvD,SAAS,GAAGwE,MAAMoB,OASjCoC,OAPJtC,EAAYC,KACdgB,IACAI,GAAgB,GAGAxD,EAAMvD,SAAS,GAAG4D,MAG7B,IAAA,OACHmD,EAAgBH,EAAcf,EAAWF,EAAYe,GAErD,MAEG,IAAA,MACHK,EAAgBH,EAAcd,EAAUH,EAAYe,GAEpD,MAEG,IAAA,UACHK,EAAgBH,EAAcb,EAAaJ,EAAYe,MAGrDf,EAAa5D,EAAkB4D,IAMjCoB,GAAAA,EAGK,OAFPe,EAAe,IAER,EAGTA,EAAa7G,KAAK0E,GAGpB2B,EAAUQ,EAAcN,EAAOC,GAE/BhB,IAEAqB,EAAe,GACf1H,EAAK6H,UAIT,SAASC,EAAWV,EAAOhE,GACzBA,EAAMN,UAAUC,IAAI,cAEFqE,IAHc,EAGdA,EAAAA,EAAAA,EAAM1G,MAHQ,IAGF,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBE,IAAmB,EACTA,EAAAA,EADS,EAAA,MACLmH,OADK,IACE,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,EAAA,MACvBrF,iBAAiB,WAAY,SAAAoE,GAChCA,EAAEC,OAAOjE,UAAUC,IAAI,aACvBxC,EAAeuG,EAAEC,OAAOjG,YACxBsC,EAAMgB,MAAQ7D,EAEVH,GAAoB,IACtB0G,EAAEC,OAAOjG,YAAc,GACvBgG,EAAEC,OAAO3E,YAAYgB,GACrBA,EAAM4E,YAVgB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,MAHE,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAoBlC,SAASC,EAAgB7E,EAAO8E,GAC1BC,IAAAA,EAAe/E,EAAMgB,MACnBlC,EAAOkB,EAAM4D,WACfL,GAAgB,EAEdyB,EAAY,EAAIlG,EAAK8E,WAAWpH,UAAU2B,QAAQW,GAGhDmG,OAFS1I,EAAOyI,GAAWtH,YAAYwC,eAGxC,IAAA,OACHqD,EAAgBH,EAAcf,EAAW0C,GAEzC,MAEG,IAAA,MACHxB,EAAgBH,EAAcd,EAAUyC,GAExC,MAEG,IAAA,SACHxB,EAAgBH,EAAcb,EAAawC,IAKhB,IAA3BD,EAAS3G,QAAQ,OACnB4G,EAAexG,GAAmBwG,IAG9B7C,EAAY6C,IACG,OAAjBA,IAA6C,IAAlBxB,GAG7BzE,EAAKpB,YAAcoH,EACnB5B,KAHApE,EAAKpB,YAAcqH,EAMrB/E,EAAMgB,MAAQ,GACdhB,EAAMjB,SACN/B,EAAmB,EAGrB,IAAK,IAAI8C,EAAI,EAAGA,EAAIvD,EAAOW,OAAQ4C,IACjCX,EAAiBW,EAAGvD,EAAOuD,IAG7B0D,EAAU/G,GAEV0E,EAAQvE,EAAMF,EAAa,SAAUC,GAErC0H,EAAWzH,EAAML,EAAOW,OAAQT,GAChCiI,EAAWjI,EAAOK,GAElBA,EAAUwC,iBAAiB,WAAY,SAAA4F,GACd,UAAnBA,EAAWC,KACbN,EAAgBK,EAAWvB,OAAQxG,KAIvCL,EAAUwC,iBAAiB,OAAQ,SAAA4F,GACjCL,EAAgBK,EAAWvB,OAAQxG","file":"main.f909d714.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst head = document.querySelector('thead');\nconst titles = [...head.children[0].children];\nconst tbody = document.querySelector('tbody');\n\nconst fieldsNames = ['Name', 'Position', 'Age', 'Salary'];\nconst selectionItems = [\n  `Tokyo`, `Singapore`, `London`, `New York`, `Edinburgh`, `San Francisco`,\n];\n\nconst form = createForm(body, 'new-employee-form');\nconst cellInput = document.createElement('input');\nlet countActiveCells = document.querySelectorAll('.modifying').length;\nlet oldCellValue = '';\n\nfunction getColumn(index) {\n  const rows = tbody.rows;\n  const column = [];\n\n  for (const row of rows) {\n    column.push(row.children[index].textContent);\n  };\n\n  return column;\n}\n\nfunction sortAscArray(array) {\n  if (array.find(el => !isNaN(+el))) {\n    return array.sort((a, b) => a - b);\n  }\n\n  if (array.find(el => el.indexOf('$') !== -1)) {\n    let column = convertCurrencytoNumber(array);\n\n    column = column.sort((a, b) => a - b);\n\n    return column.map(num => convertToCurrency(num));\n  }\n\n  return array.sort((a, b) => a.localeCompare(b));\n}\n\nfunction sortDescArray(array) {\n  if (array.find(el => !isNaN(+el))) {\n    return array.sort((a, b) => b - a);\n  }\n\n  if (array.find(el => el.indexOf('$') !== -1)) {\n    let column = convertCurrencytoNumber(array);\n\n    column = column.sort((a, b) => b - a);\n\n    return column.map(num => convertToCurrency(num));\n  }\n\n  return array.sort((a, b) => b.localeCompare(a));\n}\n\nfunction changeRowOrder(sortedArr) {\n  const sortedRows = [];\n\n  sortedArr.forEach(el => {\n    for (const row of tbody.rows) {\n      if ([...row.children].find(cell => cell.textContent === el)) {\n        sortedRows.push(row);\n      }\n    }\n  });\n\n  [...tbody.rows].forEach(el => el.remove());\n  sortedRows.forEach(el => tbody.appendChild(el));\n\n  return sortedRows;\n}\n\nfunction sortTableInDirection(index, direction = 'asc') {\n  const column = getColumn(index);\n\n  const sortedColumn = (direction !== 'asc')\n    ? sortDescArray(column)\n    : sortAscArray(column);\n\n  changeRowOrder(sortedColumn);\n}\n\nfunction sortTableOnClick(index, element) {\n  let clicksCounter = 0;\n\n  element.addEventListener('click', () => {\n    if (clicksCounter % 2 === 0) {\n      sortTableInDirection(index, 'asc');\n    } else {\n      sortTableInDirection(index, 'desc');\n    }\n\n    clicksCounter++;\n  });\n}\n\nfunction createForm(parentElement, className) {\n  const formElement = document.createElement('form');\n\n  formElement.classList.add(className);\n  parentElement.appendChild(formElement);\n\n  return formElement;\n}\n\nfunction createInputs(parentElement, fieldsArray) {\n  for (let i = 0; i < fieldsArray.length; i++) {\n    const label = document.createElement('label');\n    const input = document.createElement('input');\n    const inputInfo = fieldsNames[i].toLowerCase();\n\n    label.textContent = `${fieldsNames[i]}:`;\n    input.type = 'text';\n\n    input.type = ((i === 2) || (i === 3))\n      ? 'number'\n      : 'text';\n\n    input.name = inputInfo;\n    input['data-qa'] = inputInfo;\n    input.id = inputInfo;\n    input.required = true;\n\n    label.for = input.id;\n\n    label.appendChild(input);\n    parentElement.appendChild(label);\n  }\n}\n\nfunction createSelection(parentElement, selectionName, optionsArray) {\n  const selectionLabel = document.createElement('label');\n  const selectionItem = document.createElement('select');\n\n  selectionItem.id = selectionName.toLowerCase();\n  selectionItem.name = selectionItem.id;\n  selectionItem.required = true;\n\n  selectionLabel.for = selectionItem.id;\n  selectionLabel.textContent = `${selectionName}:`;\n\n  selectionLabel.appendChild(selectionItem);\n  parentElement.children[1].insertAdjacentElement('afterend', selectionLabel);\n\n  for (const item of optionsArray) {\n    const option = document.createElement('option');\n\n    option.value = item;\n    option.textContent = item;\n\n    selectionItem.appendChild(option);\n  }\n\n  return selectionItem;\n}\n\nfunction createSubmitButton(parentElement) {\n  const submitButton = document.createElement('button');\n\n  submitButton.type = 'submit';\n  submitButton.textContent = 'Save to table';\n\n  parentElement.appendChild(submitButton);\n\n  return submitButton;\n}\n\nfunction addForm(formElement, inputNames, selectionTitle, selectionNames) {\n  createInputs(formElement, inputNames);\n  createSelection(formElement, selectionTitle, selectionNames);\n  createSubmitButton(form);\n}\n\nfunction convertCurrencytoNumber(array) {\n  return array.map(el => +el.slice(1).split(',').join(''));\n}\n\nfunction convertToCurrency(number) {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    maximumFractionDigits: 0,\n  });\n\n  return formatter.format(number);\n}\n\nfunction checkLength(inputValue) {\n  if (inputValue.trim().length === 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction checkName(inputValue) {\n  const minInputLength = 4;\n\n  if ((checkLength(inputValue))\n  || ((!checkLength(inputValue)) && (inputValue.length < minInputLength))) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction checkAge(inputValue) {\n  const minAge = 18;\n  const maxAge = 89;\n\n  if ((checkLength(inputValue))\n  || ((inputValue < minAge) || (inputValue > maxAge))) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction checkSalary(inputValue) {\n  const minSalary = 1;\n\n  if ((checkLength(inputValue)) || (inputValue <= minSalary)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction createNotification() {\n  const block = document.createElement('div');\n  const title = document.createElement('h2');\n  const text = document.createElement('p');\n\n  block['qa'] = 'notification';\n  block.className = 'notification';\n\n  title.style.color = 'white';\n  text.style.color = 'white';\n\n  body.appendChild(block);\n  block.appendChild(title);\n  block.appendChild(text);\n\n  return block;\n}\n\nfunction displayNotification(notification) {\n  setTimeout(() => {\n    notification.style.display = 'none';\n  }, 2000);\n}\n\nfunction showSuccess() {\n  const block = createNotification();\n\n  block.classList.add('success');\n  block.children[0].textContent = 'New employee is added successfully!';\n  block.children[1].textContent = `Your team is getting bigger :)`;\n\n  displayNotification(block);\n}\n\nfunction showError() {\n  const block = createNotification();\n\n  block.classList.add('error');\n  block.children[0].textContent = 'Oops... Something went wrong';\n  block.children[1].textContent = `Please, check the data once again :(`;\n\n  displayNotification(block);\n}\n\nfunction showWarning() {\n  const block = createNotification();\n\n  block.classList.add('warning');\n  block.children[0].textContent = 'Oops... The data is invalid';\n  block.children[1].textContent = `Please, check the data once again :(`;\n\n  displayNotification(block);\n}\n\nfunction getInputError(checkingFunction, checkingValue, notification) {\n  const incorrectData = checkingFunction(checkingValue);\n\n  if (incorrectData && notification) {\n    notification();\n  }\n\n  return incorrectData;\n}\n\nfunction selectRow(tableRows) {\n  tableRows.addEventListener('click', e => {\n    const row = e.target.parentNode;\n    const activeElements = [...document.querySelectorAll('.active')];\n\n    if (!activeElements.length) {\n      row.classList.add('active');\n    } else if (activeElements.length === 1) {\n      row.classList.add('active');\n      activeElements[0].classList.remove('active');\n    }\n  });\n}\n\nfunction addNewRow(dataArr, table, rowLength) {\n  const newRow = document.createElement('tr');\n\n  table.appendChild(newRow);\n\n  for (let j = 0; j < rowLength; j++) {\n    const newCell = document.createElement('td');\n\n    newCell.textContent = dataArr[j];\n    newRow.appendChild(newCell);\n  }\n}\n\nfunction fillNewRow(formElement, rowLength, table) {\n  let userInputArr = [];\n\n  formElement.addEventListener('submit', e => {\n    e.preventDefault();\n\n    let incorrectData = false;\n\n    for (let i = 0; i < form.children.length - 1; i++) {\n      const label = form.children[i];\n      let inputValue = label.children[0].value.trim();\n\n      if (checkLength(inputValue)) {\n        showWarning();\n        incorrectData = true;\n      }\n\n      const inputName = label.children[0].name;\n\n      switch (inputName) {\n        case 'name':\n          incorrectData = getInputError(checkName, inputValue, showError);\n\n          break;\n\n        case 'age':\n          incorrectData = getInputError(checkAge, inputValue, showError);\n\n          break;\n\n        case 'salary':\n          incorrectData = getInputError(checkSalary, inputValue, showError);\n\n          if (!incorrectData) {\n            inputValue = convertToCurrency(inputValue);\n          }\n\n          break;\n      }\n\n      if (incorrectData) {\n        userInputArr = [];\n\n        return false;\n      }\n\n      userInputArr.push(inputValue);\n    }\n\n    addNewRow(userInputArr, table, rowLength);\n\n    showSuccess();\n\n    userInputArr = [];\n    form.reset();\n  });\n}\n\nfunction selectCell(table, input) {\n  input.classList.add('cell-input');\n\n  for (const row of table.rows) {\n    for (const cell of row.cells) {\n      cell.addEventListener('dblclick', e => {\n        e.target.classList.add('modifying');\n        oldCellValue = e.target.textContent;\n        input.value = oldCellValue;\n\n        if (countActiveCells <= 1) {\n          e.target.textContent = '';\n          e.target.appendChild(input);\n          input.focus();\n        }\n      });\n    }\n  }\n}\n\nfunction setNewCellValue(input, oldValue) {\n  let newCellValue = input.value;\n  const cell = input.parentNode;\n  let incorrectData = false;\n\n  const cellIndex = [...cell.parentNode.children].indexOf(cell);\n  const cellName = titles[cellIndex].textContent.toLowerCase();\n\n  switch (cellName) {\n    case 'name':\n      incorrectData = getInputError(checkName, newCellValue);\n\n      break;\n\n    case 'age':\n      incorrectData = getInputError(checkAge, newCellValue);\n\n      break;\n\n    case 'salary':\n      incorrectData = getInputError(checkSalary, newCellValue);\n\n      break;\n  }\n\n  if (oldValue.indexOf('$') !== -1) {\n    newCellValue = convertToCurrency(+newCellValue);\n  }\n\n  if ((!checkLength(newCellValue))\n  && (newCellValue !== '$0') && (incorrectData === false)) {\n    cell.textContent = newCellValue;\n  } else {\n    cell.textContent = oldValue;\n    showError();\n  }\n\n  input.value = '';\n  input.remove();\n  countActiveCells = 0;\n}\n\nfor (let i = 0; i < titles.length; i++) {\n  sortTableOnClick(i, titles[i]);\n}\n\nselectRow(tbody);\n\naddForm(form, fieldsNames, 'Office', selectionItems);\n\nfillNewRow(form, titles.length, tbody);\nselectCell(tbody, cellInput);\n\ncellInput.addEventListener('keypress', inputEvent => {\n  if (inputEvent.key === 'Enter') {\n    setNewCellValue(inputEvent.target, oldCellValue);\n  }\n});\n\ncellInput.addEventListener('blur', inputEvent => {\n  setNewCellValue(inputEvent.target, oldCellValue);\n});\n"]}